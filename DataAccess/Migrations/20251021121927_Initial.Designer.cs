// <auto-generated />
using System;
using DataAccess.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20251021121927_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BookCategory", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategory");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c01"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e751")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c02"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e752")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c02"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e753")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c02"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e756")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c03"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e755")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c03"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e756")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c04"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e756")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c05"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e756")
                        },
                        new
                        {
                            BookId = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c05"),
                            CategoryId = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e757")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Biography")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d1"),
                            BirthDate = new DateTime(1920, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isaac",
                            LastName = "Asimov"
                        },
                        new
                        {
                            Id = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d2"),
                            BirthDate = new DateTime(1920, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ray",
                            LastName = "Bradbury"
                        },
                        new
                        {
                            Id = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d3"),
                            Biography = "Robert Anson Heinlein (July 7, 1907 – May 8, 1988) was an American science fiction author, aeronautical engineer, and naval officer. Sometimes called the \"dean of science fiction writers\", he was among the first to emphasize scientific accuracy in his fiction and was thus a pioneer of the subgenre of hard science fiction. His published works, both fiction and non-fiction, express admiration for competence and emphasize the value of critical thinking. His plots often posed provocative situations which challenged conventional social mores. His work continues to have an influence on the science-fiction genre and on modern culture more generally.",
                            BirthDate = new DateTime(1907, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Heinlein"
                        },
                        new
                        {
                            Id = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d4"),
                            BirthDate = new DateTime(1947, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Stephen",
                            LastName = "King"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("varchar(17)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c01"),
                            AuthorId = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d2"),
                            ISBN = "978-0-7432-4722-1",
                            Price = 9.99m,
                            Title = "Fahrenheit 451",
                            Year = 1953
                        },
                        new
                        {
                            Id = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c02"),
                            AuthorId = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d2"),
                            ISBN = "0-553-27753-7",
                            Price = 7.99m,
                            Title = "Dandelion Wine",
                            Year = 1957
                        },
                        new
                        {
                            Id = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c03"),
                            AuthorId = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d4"),
                            ISBN = "978-0451223296",
                            Price = 5.99m,
                            Title = "The Mist",
                            Year = 1976
                        },
                        new
                        {
                            Id = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c04"),
                            AuthorId = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d1"),
                            ISBN = "0-385-02701-X",
                            Price = 8.99m,
                            Title = "The Gods Themselves",
                            Year = 1972
                        },
                        new
                        {
                            Id = new Guid("be61d971-5ebc-4f02-a3a9-6c82895e5c05"),
                            AuthorId = new Guid("ab29fc40-ca47-1067-b31d-00dd010662d3"),
                            ISBN = "978-0450044496",
                            Price = 5.99m,
                            Title = "Starship Troopers",
                            Year = 1959
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e751"),
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e752"),
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e753"),
                            Name = "Classics"
                        },
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e754"),
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e755"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e756"),
                            Description = "The genre of speculative fiction that imagines advanced and futuristic scientific progress and typically includes elements like information technology and robotics, biological manipulations, space exploration, time travel, parallel universes, and extraterrestrial life.",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("c4cd02b7-5d56-403d-9041-cc4f3851e757"),
                            Name = "Military"
                        });
                });

            modelBuilder.Entity("BookCategory", b =>
                {
                    b.HasOne("Domain.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.HasOne("Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
